name: Build and Publish Debian Package

on:
  push:
    tags:
      - '*'

jobs:
  build-debian-package:
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-22.04-arm64 ]
    runs-on: ${{ matrix.os }}
    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          sed -i "s/0\.0\.0-dev/${{ github.ref_name }}/g" Cargo.toml 
          sed -i "s/0\.0\.0-dev/${{ github.ref_name }}/g" Cargo.lock 
          docker build -t webx-router-builder -f docker/Dockerfile .

      - name: Extract Debian package
        run: |
          ARCH=$(dpkg --print-architecture)

          CONTAINER_ID=$(docker create webx-router-builder)
          docker cp $CONTAINER_ID:/app/target/debian/. ./debian-package
          docker cp $CONTAINER_ID:/app/target/ubuntu/. ./ubuntu-package
          docker rm -f $CONTAINER_ID
    
          # Find the actual Debian package filename in the `./debian-package` directory
          DEB_FILE=$(find ./debian-package -name "webx-router_*_${ARCH}.deb")
          UBUNTU_FILE=$(find ./ubuntu-package -name "webx-router_*_${ARCH}.deb")
    
          # Move and rename the files
          mv "$DEB_FILE" "./debian-package/webx-router_${{ github.ref_name }}_debian_11_${ARCH}.deb"
          mv "$UBUNTU_FILE" "./debian-package/webx-router_${{ github.ref_name }}_ubuntu_22.04_${ARCH}.deb"

      - name: Upload Debian artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          path: ./debian-package/

      - name: Upload Debian package as Release asset
        uses: softprops/action-gh-release@v1
        with:
          files: debian-package/*.deb